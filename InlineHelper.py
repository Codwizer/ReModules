# ---------------------------------------------------------------------------------
# Name: InlineHelper
# Description: Basic management of the UB in case only the inline works
# Author: @hikka_mods
# ---------------------------------------------------------------------------------

# üîí    Licensed under the GNU AGPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html

# meta developer: @hikka_mods
# scope: InlineHelper
# scope: InlineHelper 0.0.1
# ---------------------------------------------------------------------------------
import sys
import os
import asyncio
import logging
from .. import loader, utils, main

from ..inline.types import InlineCall, InlineQuery


class InlineHelperMod(loader.Module):
    """Basic management of the UB in case only the inline works"""

    strings = {
        "name": "InlineHelper",
        "call_restart": "Restarting...",
        "call_update": "Updating...",
        "res_prefix": "Successfully reset prefix to default",
        "restart_inline_handler_title": "Restart Userbot",
        "restart_inline_handler_description": "Restart your userbot via inline",
        "restart_inline_handler_message": "Press the button below to restart your userbot",
        "restart_inline_handler_reply_text": "Restart",
        "update_inline_handler_title": "Update Userbot",
        "update_inline_handler_description": "Update your userbot via inline",
        "update_inline_handler_message": "Press the button below to update your userbot",
        "update_inline_handler_reply_text": "Update",
        "terminal_inline_handler_title": "Command Executed!",
        "terminal_inline_handler_description": "Command executed successfully",
        "terminal_inline_handler_message": "Command {text} executed successfully in terminal",
        "modules_inline_handler_title": "Modules",
        "modules_inline_handler_description": "List all installed modules",
        "modules_inline_handler_result": "‚òòÔ∏è Installed modules:\n",
        "resetprefix_inline_handler_title": "Reset Prefix",
        "resetprefix_inline_handler_description": "Reset your prefix back to default",
        "resetprefix_inline_handler_message": "Are you sure you want to reset your prefix to default dot?",
        "resetprefix_inline_handler_reply_text_yes": "Yes",
        "resetprefix_inline_handler_reply_text_no": "No",
    }

    strings_ru = {
        "call_restart": "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é...",
        "call_update": "–û–±–Ω–æ–≤–ª—è—é...",
        "res_prefix": "–ü—Ä–µ—Ñ–∏–∫—Å —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é",
        "restart_inline_handler_title": "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —é–∑–µ—Ä–±–æ—Ç–∞",
        "restart_inline_handler_description": "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —é–∑–µ—Ä–±–æ—Ç–∞ —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω",
        "restart_inline_handler_message": "<b>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Ä–µ—Å—Ç–∞—Ä—Ç–∞ —é–∑–µ—Ä–±–æ—Ç–∞</b>",
        "restart_inline_handler_reply_text": "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫",
        "update_inline_handler_title": "–û–±–Ω–æ–≤–∏—Ç—å —é–∑–µ—Ä–±–æ—Ç–∞",
        "update_inline_handler_description": "–û–±–Ω–æ–≤–∏—Ç—å —é–∑–µ—Ä–±–æ—Ç–∞ —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω",
        "update_inline_handler_message": "<b>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —é–∑–µ—Ä–±–æ—Ç–∞</b>",
        "update_inline_handler_reply_text": "–û–±–Ω–æ–≤–∏—Ç—å",
        "terminal_inline_handler_title": "–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!",
        "terminal_inline_handler_description": "–ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.",
        "terminal_inline_handler_message": "–ö–æ–º–∞–Ω–¥–∞ <code>{text}</code> –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ",
        "modules_inline_handler_title": "–ú–æ–¥—É–ª–∏",
        "modules_inline_handler_description": "–í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–æ—É–¥–µ–π",
        "modules_inline_handler_result": "‚òòÔ∏è –í—Å–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏:\n",
        "resetprefix_inline_handler_title": "–°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å",
        "resetprefix_inline_handler_description": "–°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é",
        "resetprefix_inline_handler_message": "–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤–∞—à –ø—Ä–µ—Ñ–∏–∫—Å –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ç–æ—á–∫—É?",
        "resetprefix_inline_handler_reply_text_yes": "–î–∞",
        "resetprefix_inline_handler_reply_text_no": "–ù–µ—Ç",
    }

    async def client_ready(self, client, db):
        self.client = client
        self.db = db

    async def restart(self, call):
        """Restart callback"""
        logging.error("InlineHelper: restarting userbot...")
        await call.edit(self.strings("call_restart"))
        await sys.exit(0)

    async def update(self, call):
        """Update callback"""
        logging.error("InlineHelper: updating userbot...")
        os.system(f"cd {utils.get_base_dir()} && cd .. && git reset --hard HEAD")
        os.system("git pull")
        await call.edit(self.strings("call_update"))
        await sys.exit(0)

    async def reset_prefix(self, call):
        """Reset prefix"""
        self.db.set(main.__name__, "command_prefix", ".")
        await call.edit(self.strings("res_prefix"))

    async def restart_inline_handler(self, query: InlineQuery):
        """- –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —é–∑–µ—Ä–±–æ—Ç–∞"""

        return {
            "title": self.strings("restart_inline_handler_title"),
            "description": self.strings("restart_inline_handler_description"),
            "message": self.strings("restart_inline_handler_message"),
            "reply_markup": [
                {
                    "text": self.strings("restart_inline_handler_reply_text"),
                    "callback": self.restart,
                }
            ],
        }

    async def update_inline_handler(self, query: InlineQuery):
        """- –æ–±–Ω–æ–≤–∏—Ç—å —é–∑–µ—Ä–±–æ—Ç–∞"""

        return {
            "title": self.strings("update_inline_handler_title"),
            "description": self.strings("update_inline_handler_description"),
            "message": self.strings("update_inline_handler_message"),
            "reply_markup": [
                {
                    "text": self.strings("update_inline_handler_reply_text"),
                    "callback": self.update,
                }
            ],
        }

    async def terminal_inline_handler(self, query: InlineQuery):
        """- –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ (–ª—É—á—à–µ —Å—Ä–∞–∑—É –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –ø—Ä–æ—Å—Ç–æ –≤—Å—Ç–∞–≤–∏—Ç—å)"""

        text = query.args

        sproc = await asyncio.create_subprocess_shell(
            f"{text}",
            stdin=asyncio.subprocess.PIPE,
            stdout=asyncio.subprocess.PIPE,
            stderr=asyncio.subprocess.PIPE,
            cwd=utils.get_base_dir(),
        )

        return {
            "title": self.strings("terminal_inline_handler_title"),
            "description": self.strings("terminal_inline_handler_description"),
            "message": self.strings("terminal_inline_handler_message").format(
                text=text
            ),
        }

    async def modules_inline_handler(self, query: InlineQuery):
        """- –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π —á–µ—Ä–µ–∑ –∏–Ω–ª–∞–π–Ω"""

        result = self.strings("modules_inline_handler_result")

        for mod in self.allmodules.modules:
            try:
                name = mod.strings["name"]
            except KeyError:
                name = mod.__clas__.__name__
            result += f"‚Ä¢ {name}\n"

        return {
            "title": self.strings("modules_inline_handler_title"),
            "description": self.strings("modules_inline_handler_description"),
            "message": result,
        }

    async def resetprefix_inline_handler(self, query: InlineQuery):
        """- —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å (–æ—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ, —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤–∞—à –ø—Ä–µ—Ñ–∏–∫—Å –Ω–∞ . )"""

        return {
            "title": self.strings("resetprefix_inline_handler_title"),
            "description": self.strings("resetprefix_inline_handler_description"),
            "message": self.strings("resetprefix_inline_handler_message"),
            "reply_markup": [
                {
                    "text": self.strings("resetprefix_inline_handler_reply_text_yes"),
                    "callback": self.reset_prefix,
                },
                {
                    "text": self.strings("resetprefix_inline_handler_reply_text_no"),
                    "action": "close",
                },
            ],
        }
